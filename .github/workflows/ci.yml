name: XXL Job CI

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  build_all:
    name: Compile with JDK 8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: adopt
          java-version: 8

      - name: Build Maven Application
        shell: bash
        run: mvn -B package --file pom.xml

      - name: Create SBOM For xxl-job-admin
        uses: anchore/sbom-action@v0.15.10
        with:
          path: ./xxl-job-admin/target/
          artifact-name: xxl-job-admin-sbom.cyclonedx
          dependency-snapshot: true
          format: cyclonedx-json

      - name: Create SBOM For xxl-job-core
        uses: anchore/sbom-action@v0.15.10
        with:
          path: ./xxl-job-core/target/
          artifact-name: xxl-job-core-sbom.cyclonedx
          dependency-snapshot: true
          format: cyclonedx-json

      - name: Create SBOM For xxl-job-executor-sample-frameless
        uses: anchore/sbom-action@v0.15.10
        with:
          path: ./xxl-job-executor-samples/xxl-job-executor-sample-frameless/target/
          artifact-name: xxl-job-executor-sample-frameless-sbom.cyclonedx
          dependency-snapshot: true
          format: cyclonedx-json

      - name: Create SBOM For xxl-job-executor-sample-springboot
        uses: anchore/sbom-action@v0.15.10
        with:
          path: ./xxl-job-executor-samples/xxl-job-executor-sample-springboot/target/
          artifact-name: xxl-job-executor-sample-springboot-sbom.cyclonedx
          dependency-snapshot: true
          format: cyclonedx-json

      - name: Tar Maven Build Repository
        shell: bash
        run: tar -czf maven-build.tgz -C ~ .m2/repository

      - name: Upload Maven Build Repository
        uses: actions/upload-artifact@v4
        with:
          name: maven-build
          path: maven-build.tgz

      - name: Generate Maven Dependency Tree
        shell: bash
        run: mvn compile dependency:tree -DoutputFile=maven_dep_tree.txt

      - name: Create Maven Dependency Tree Zip File
        shell: bash
        run: find . -type f -name 'maven_dep_tree.txt' -exec zip -r mvn-dependency-tree.zip {} +

      - name: Upload Maven Dependency Tree Zip
        uses: actions/upload-artifact@v4
        with:
          name: maven-dependency-tree
          path: mvn-dependency-tree.zip

  snyk_scan:
    needs: [ build_all ]
    name: Run SCA Snyk Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Maven Build
        uses: actions/download-artifact@v4
        with:
          name: maven-build
          path: .

      - name: Extract Maven Build
        shell: bash
        run: tar -xzf maven-build.tgz -C ~

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4.0.2

      - name: Install Snyk CLI
        shell: bash
        run: npm install snyk -g

      # Snyk returns exit code 1 if vulnerabilities are found
      - name: Run Snyk Scan
        shell: bash
        run: |
          export SNYK_TOKEN=${{ secrets.SNYK_TOKEN }}
          snyk test --all-projects --dev --sarif-file-output=snyk.sarif --json > snyk.json || EXIT_CODE=$?
          if [ $EXIT_CODE -eq 1 ]; then exit 0; fi

      - name: Upload Snyk Scan Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-scan-report
          path: '**/snyk.json'

      - name: Upload Snyk Result To GitHub Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
          category: snyk-sca-tool

  eclipse_steady_scan:
    needs: [ build_all ]
    name: Run SCA Eclipse Steady Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Maven Build
        uses: actions/download-artifact@v4
        with:
          name: maven-build
          path: .

      - name: Extract Maven Build
        shell: bash
        run: tar -xzf maven-build.tgz -C ~

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: adopt
          java-version: 8

      - name: Run Eclipse Steady Scan
        shell: bash
        run: mvn compile -Dsteady compile steady:app steady:report

      - name: Upload Eclipse Steady Scan Json Results
        uses: actions/upload-artifact@v4
        with:
          name: eclipse-steady-scan-reports-json
          path: '**/vulas-report.json'

      - name: Upload Eclipse Steady Scan Html Results
        uses: actions/upload-artifact@v4
        with:
          name: eclipse-steady-scan-reports-html
          path: '**/vulas-report.html'

  owasp_dependency_check:
    needs: [ build_all ]
    name: Run SCA OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Maven Build
        uses: actions/download-artifact@v4
        with:
          name: maven-build
          path: .

      - name: Extract Maven Build
        shell: bash
        run: tar -xzf maven-build.tgz -C ~

      - name: Run OWASP Dependency Check (JSON)
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: xxl-job
          path: .
          format: JSON
          args: >
            --enableRetired

      - name: Run OWASP Dependency Check (HTML)
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: xxl-job
          path: .
          format: HTML
          args: >
            --enableRetired

      - name: Upload OWASP Dependency Check Results
        uses: actions/upload-artifact@v4
        with:
          name: OWASP Dependency Check Reports
          path: ${{github.workspace}}/reports

  sonarqube_scan:
    needs: [ build_all ]
    name: Run SAST SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: adopt
          java-version: 8

      - name: Rebuild Maven Project
        shell: bash
        run: mvn -B package --file pom.xml

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: temurin
          java-version: 17

      - name: Run SonarQube Scan
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn sonar:sonar -Dsonar.projectKey=xxl-job-H6060 -Dsonar.projectName=xxl-job-H6060

  semgrep_scan:
    needs: [ build_all ]
    name: Run SAST Semgrep Scan
    runs-on: ubuntu-latest
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
    container:
      image: semgrep/semgrep
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Maven Dependency Tree
        uses: actions/download-artifact@v4
        with:
          name: maven-dependency-tree

      - name: Run Semgrep Scan
        shell: bash
        run: |
          unzip -o mvn-dependency-tree.zip
          semgrep scan --config=p/ci --sarif > semgrep.sarif

      - name: Upload Semgrep Result To GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  horusec_scan:
    needs: [ build_all ]
    name: Run SAST Horusec Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Horusec Scan
        uses: fike/horusec-action@v0.2.2
        with:
          arguments: -c="horusec-config.json" -w -j -p="./" -e="false" -o="json" -O="hoursec_report.json"

      - name: Upload Horusec JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: hoursec-scan-report
          path: '**/hoursec_report.json'

  insider_scan:
    needs: [ build_all ]
    name: Run SAST Insider Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Insider Scan
        shell: bash
        run: |
          wget https://github.com/insidersec/insider/releases/download/3.0.0/insider_3.0.0_linux_x86_64.tar.gz
          tar -xf insider_3.0.0_linux_x86_64.tar.gz
          chmod +x insider
          ./insider --tech java --target . 

      - name: Upload Insider JSON Report
        uses: actions/upload-artifact@v4
        with:
          name: insider-report.json
          path: '**/report.json'

      - name: Upload Insider HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: insider-report.html
          path: '**/report.html'
